<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>container on 往往不的攻略笔记</title>
    <link>https://www.wangwangbu.com/tags/container/</link>
    <description>Recent content in container on 往往不的攻略笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 15 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.wangwangbu.com/tags/container/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go 标准库：container/heap</title>
      <link>https://www.wangwangbu.com/posts/zettel/z-go-heap/</link>
      <pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.wangwangbu.com/posts/zettel/z-go-heap/</guid>
      <description>container/heap 文档： https://pkg.go.dev/container/heap heap 库包装了堆相关的方法，能够自动维护一个堆，需要我们实现一个接口供 heap 的方法调用： 1 2 3 4 5 type Interface interface { sort.Interface Push(x any) // 将 x 加到堆的 Len() 处 Pop() any // 堆</description>
    </item>
    
    <item>
      <title>Go 标准库：container/list</title>
      <link>https://www.wangwangbu.com/posts/zettel/z-go-list/</link>
      <pubDate>Tue, 14 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://www.wangwangbu.com/posts/zettel/z-go-list/</guid>
      <description>container/list 文档： https://pkg.go.dev/container/list list 是一个双向链表，其中每个元素是 Element 类型： 1 2 3 type Element struct { Value interface{} } 可用(*Element)Next方法和(*Element)Prev方法</description>
    </item>
    
  </channel>
</rss>
